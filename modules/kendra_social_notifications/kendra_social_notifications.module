<?php

/*
CREATE TABLE  `kendra_notifications` (
`id` INT( 10 ) UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY ,
`source` INT( 10 ) UNSIGNED NOT NULL ,
`from` INT( 10 ) UNSIGNED NOT NULL ,
`to` INT( 10 ) UNSIGNED NOT NULL ,
`type` VARCHAR( 25 ) NOT NULL ,
`time` INT( 11 ) NOT NULL , INDEX (  `to` ) ) ENGINE = INNODB;

ALTER TABLE  `kendra_notifications` ADD  `source2` INT( 10 ) UNSIGNED NOT NULL

ALTER TABLE  `kendra_notifications` CHANGE  `source`  `source` INT( 10 ) UNSIGNED NULL ,
CHANGE  `from`  `from` INT( 10 ) UNSIGNED NULL ,
CHANGE  `source2`  `source2` INT( 10 ) UNSIGNED NULL


ALTER TABLE  `kendra_notifications` ADD  `rid` INT( 10 ) UNSIGNED  NULL

*/


function _kss_notification_add($type, $source, $user_from, $user_to, $source2 = 0, $rid = 0) {
	db_query("INSERT INTO {kendra_notifications} (`source`, `from`, `to`, `type`, `time`, `source2`, `rid`)
	  VALUES (:s, :f, :t, :ty, :ti, :ss, :r)", array(
	  	':s' => $source,
			':f' => $user_from, ':t' => $user_to,
			':ty' => $type, ':ti' => REQUEST_TIME, ':ss' => $source2,
			':r' => $rid,
	  ));
}

function _kss_notification_create($args) {
	watchdog('notification', '<pre>' . print_r(func_get_args(), TRUE) . '</pre>');
  $user_name = $args['name'];
  $type = $args['action'];
  $title = $args['title'];
  $id = $args['id'];
  if ($type == 'reject') {
    //$nid = _kendra_saracen_trial_mod_lookup_id($id);
    $uquery = db_query("SELECT uid FROM {users} WHERE name = :name", array(':name' => $user_name));
    $uid = $uquery->fetchField();
    if (!empty($uid)) {
      _kss_notification_add('Reject', 0, 0, $uid);
    } else {
      watchdog('reject fail', '<pre>' . print_r(func_get_args(), TRUE) . '</pre>');
    }
  }
	return array('status' => 'ok', 'message' => 'notification logged');
}

/*

notification id
type = review | comment | location | link | rate | tag | import | share
user id
user name
message
media id
annotation content
timestamp

*/

function _kss_notification_list($filter, $type) {
  global $user;
	$q_filter = empty($type) ? '' : " AND n.type = :t";
	$params = array(':uid' => $user->uid);
	if (!empty($type)) {
		$params[':t'] = $type;
	}

	$res = db_query("SELECT n.id, n.type, n.from, u.name, n.source, n.source2, n.time
		FROM {kendra_notifications} n
		LEFT JOIN {users} u ON u.uid = n.from
		WHERE `to` = :uid {$q_filter}", $params);

  $annotation_types = array('Review', 'Location', 'Link', 'Comment', 'Friend');

	$output = array();
	foreach ($res as $result) {
		$text = ''; $start = ''; $length = '';
		if (in_array($result->type, $annotation_types)) {
			$annotation = node_load($result->source2);
      if (!empty($annotation->type)) {
  			$text = field_get_items('node', $annotation, 'field_annotation_text');
	  		$text = (!empty($text[0]['safe_value'])) ? $text[0]['safe_value'] : '';
		  	$start = field_get_items('node', $annotation, 'field_annotation_start');
			  $start = (!empty($start[0]['value'])) ? $start[0]['value'] : '';
			  $length = field_get_items('node', $annotation, 'field_annotation_length');
			  $length = (!empty($length[0]['value'])) ? $length[0]['value'] : '';
      }
		}
		$output[] = array(
			'id' => intval($result->id),
			'type' => $result->type,
			'user_id' => intval($result->from),
			'user_name' => $result->name,
			'message' => _kss_notification_create_message($result),
			'text' => $text,
			'start' => $start,
			'length' => $length,
			'date' => intval($result->time),
		);
	}
	return $output;
}

function _kss_notification_create_message($result) {
  $node = node_load($result->source);
	if ($result->type == "Share") {
		$box = node_load($result->source2);
		return "{$result->name} added video {$node->title} to your {$box->title} box";
	}
	if ($result->type == "Import") {
		return "Import of video {$node->title} completed.";
	}
  if ($result->type == "Rate") {
    return "{$result->name} rated your content {$node->title}";
  }
  if ($result->type == "Reject") {
    return "An item of content was rejected by the encoder";
  }
  if ($node->nid) {
    return "{$result->name} added a {$result->type} on video {$node->title}";
  }
  return "No message";
}

function _kss_notification_approve($data) {
	$ids = explode(',', $data['ids']);
	foreach ($ids as $key => $id) {
		$ids[$key] = intval($id);
		if (!is_int($ids[$key])) {
			return array('status' => 'error', 'message' => 'all IDs must be integers');
		}
	}
	if (!empty($ids)) {
		global $user;
  	$res = db_query("DELETE FROM {kendra_notifications} WHERE id IN (:ids) AND `to` = :u", array(':u' => $user->uid, ':ids' => $ids));
    return array('status' => 'ok', 'message' => 'Approved ' . $res->rowCount() . ' notifications');
  }
}

function _kss_notification_reject($data) {
  $annotation_types = array('Review', 'Location', 'Link', 'Comment', 'Friend');
  $ids = explode(',', $data['ids']);
	foreach ($ids as $key => $id) {
		$ids[$key] = intval($id);
		if (!is_int($ids[$key])) {
			return array('status' => 'error', 'message' => 'all IDs must be integers');
		}
	}
	// load the notification, depending on type remove source
	$res = db_query("SELECT type, source, source2, rid FROM {kendra_notifications} WHERE id IN (:ids)", array(':ids' => $ids));
	$res = $res->fetchAll();
	$output = '';
	foreach ($res as $n) {
		if ($n->type == 'Share') {
			// Remove $source from $source2
			relation_delete($n->rid);
			$output .= ' relation(' . $n->rid . ')';
		} else if (in_array($n->type, $annotation_types)) {
			$ann = node_load($n->source2);
			if ($ann->type == 'annotation') {
				node_delete($ann->nid);
				$output .= ' annotation(' . $ann->nid . ')';
			}
		}
	}
	_kss_notification_approve($data);
	return array('status' => 'ok', 'message' => 'deleted ' . $output);
}











